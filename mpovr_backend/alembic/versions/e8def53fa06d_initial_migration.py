"""Initial migration

Revision ID: e8def53fa06d
Revises: 
Create Date: 2024-12-15 22:48:58.433665

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'e8def53fa06d'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('applications', 'status',
               existing_type=postgresql.ENUM('pending', 'approved', 'rejected', name='application_status'),
               type_=sa.Enum('pending', 'approved', 'rejected', name='application_status'),
               existing_nullable=False,
               existing_server_default=sa.text("'pending'::application_status"))
    op.add_column('content', sa.Column('description', sa.String(length=1000), nullable=True))
    op.add_column('content', sa.Column('program_id', sa.Integer(), nullable=True))
    op.add_column('content', sa.Column('user_id', sa.Integer(), nullable=True))
    op.alter_column('content', 'content_type',
               existing_type=postgresql.ENUM('virtual_live_session', 'video', 'reading', 'assignment', 'practicum', 'presentation', 'quiz', name='content_type'),
               type_=sa.Enum('virtual_live_session', 'video', 'reading', 'assignment', 'practicum', 'presentation', 'quiz', 'document', 'image', 'url', name='content_type'),
               existing_nullable=False)
    op.drop_constraint('content_module_id_fkey', 'content', type_='foreignkey')
    op.create_foreign_key(None, 'content', 'users', ['user_id'], ['user_id'])
    op.create_foreign_key(None, 'content', 'programs', ['program_id'], ['program_id'])
    op.drop_column('content', 'content_text')
    op.drop_column('content', 'content_url')
    op.drop_column('content', 'opens_at')
    op.drop_column('content', 'closes_at')
    op.drop_column('content', 'module_id')
    op.drop_column('content', 'order_number')
    op.alter_column('enrollments', 'status',
               existing_type=postgresql.ENUM('active', 'completed', 'discontinued', name='enrollment_status'),
               type_=sa.Enum('active', 'completed', 'discontinued', name='enrollment_status'),
               existing_nullable=False,
               existing_server_default=sa.text("'active'::enrollment_status"))
    op.alter_column('messages', 'status',
               existing_type=postgresql.ENUM('pending', 'approved', 'rejected', name='message_status'),
               type_=sa.Enum('pending', 'approved', 'rejected', name='message_status'),
               existing_nullable=False,
               existing_server_default=sa.text("'pending'::message_status"))
    op.alter_column('payments', 'amount',
               existing_type=sa.NUMERIC(precision=10, scale=2),
               type_=sa.Float(precision=2),
               existing_nullable=False)
    op.alter_column('payments', 'status',
               existing_type=postgresql.ENUM('pending', 'completed', 'refunded', name='payment_status'),
               type_=sa.Enum('pending', 'completed', 'refunded', name='payment_status'),
               existing_nullable=False,
               existing_server_default=sa.text("'pending'::payment_status"))
    op.alter_column('programs', 'fee',
               existing_type=sa.NUMERIC(precision=10, scale=2),
               type_=sa.Float(precision=2),
               existing_nullable=False)
    op.alter_column('quiz_attempts', 'score',
               existing_type=sa.NUMERIC(precision=5, scale=2),
               type_=sa.Float(precision=2),
               existing_nullable=True)
    op.alter_column('quizzes', 'description',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
    op.alter_column('quizzes', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               existing_nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('quizzes', 'updated_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               existing_nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('submissions', 'grade',
               existing_type=sa.NUMERIC(precision=5, scale=2),
               type_=sa.Float(precision=2),
               existing_nullable=True)
    op.alter_column('users', 'role',
               existing_type=postgresql.ENUM('learner', 'trainer', 'admin', 'role_admin', name='user_role'),
               type_=sa.Enum('learner', 'trainer', 'admin', 'role_admin', name='user_role'),
               existing_nullable=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('users', 'role',
               existing_type=sa.Enum('learner', 'trainer', 'admin', 'role_admin', name='user_role'),
               type_=postgresql.ENUM('learner', 'trainer', 'admin', 'role_admin', name='user_role'),
               existing_nullable=False)
    op.alter_column('submissions', 'grade',
               existing_type=sa.Float(precision=2),
               type_=sa.NUMERIC(precision=5, scale=2),
               existing_nullable=True)
    op.alter_column('quizzes', 'updated_at',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               existing_nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('quizzes', 'created_at',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               existing_nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('quizzes', 'description',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('quiz_attempts', 'score',
               existing_type=sa.Float(precision=2),
               type_=sa.NUMERIC(precision=5, scale=2),
               existing_nullable=True)
    op.alter_column('programs', 'fee',
               existing_type=sa.Float(precision=2),
               type_=sa.NUMERIC(precision=10, scale=2),
               existing_nullable=False)
    op.alter_column('payments', 'status',
               existing_type=sa.Enum('pending', 'completed', 'refunded', name='payment_status'),
               type_=postgresql.ENUM('pending', 'completed', 'refunded', name='payment_status'),
               existing_nullable=False,
               existing_server_default=sa.text("'pending'::payment_status"))
    op.alter_column('payments', 'amount',
               existing_type=sa.Float(precision=2),
               type_=sa.NUMERIC(precision=10, scale=2),
               existing_nullable=False)
    op.alter_column('messages', 'status',
               existing_type=sa.Enum('pending', 'approved', 'rejected', name='message_status'),
               type_=postgresql.ENUM('pending', 'approved', 'rejected', name='message_status'),
               existing_nullable=False,
               existing_server_default=sa.text("'pending'::message_status"))
    op.alter_column('enrollments', 'status',
               existing_type=sa.Enum('active', 'completed', 'discontinued', name='enrollment_status'),
               type_=postgresql.ENUM('active', 'completed', 'discontinued', name='enrollment_status'),
               existing_nullable=False,
               existing_server_default=sa.text("'active'::enrollment_status"))
    op.add_column('content', sa.Column('order_number', sa.INTEGER(), autoincrement=False, nullable=False))
    op.add_column('content', sa.Column('module_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('content', sa.Column('closes_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False))
    op.add_column('content', sa.Column('opens_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False))
    op.add_column('content', sa.Column('content_url', sa.VARCHAR(length=255), autoincrement=False, nullable=True))
    op.add_column('content', sa.Column('content_text', sa.TEXT(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'content', type_='foreignkey')
    op.drop_constraint(None, 'content', type_='foreignkey')
    op.create_foreign_key('content_module_id_fkey', 'content', 'modules', ['module_id'], ['module_id'], ondelete='CASCADE')
    op.alter_column('content', 'content_type',
               existing_type=sa.Enum('virtual_live_session', 'video', 'reading', 'assignment', 'practicum', 'presentation', 'quiz', 'document', 'image', 'url', name='content_type'),
               type_=postgresql.ENUM('virtual_live_session', 'video', 'reading', 'assignment', 'practicum', 'presentation', 'quiz', name='content_type'),
               existing_nullable=False)
    op.drop_column('content', 'user_id')
    op.drop_column('content', 'program_id')
    op.drop_column('content', 'description')
    op.alter_column('applications', 'status',
               existing_type=sa.Enum('pending', 'approved', 'rejected', name='application_status'),
               type_=postgresql.ENUM('pending', 'approved', 'rejected', name='application_status'),
               existing_nullable=False,
               existing_server_default=sa.text("'pending'::application_status"))
    # ### end Alembic commands ###
